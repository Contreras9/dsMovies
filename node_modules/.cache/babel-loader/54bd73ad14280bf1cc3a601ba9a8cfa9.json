{"ast":null,"code":"var _jsxFileName = \"/Users/aaronkaplan/Development/code/3-phase-3/phase-3-sinatra-react-project-frontend/src/pages/Listing/index.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport MovieCard from \"../../components/MovieCard\";\nimport Pagination from \"../../components/Pagination\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Listing() {\n  _s();\n\n  const max_movies_per_page = 4;\n  const [page, setPage] = useState({\n    first: 0,\n    last: 0,\n    number: 0,\n    totalPages: 0\n  });\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:9292/movies`).then(response => {\n      const data = response.data;\n      setMovies(data);\n      setPage({\n        first: 0,\n        last: Math.ceil(movies.length / max_movies_per_page) - 1,\n        number: 0,\n        totalPages: Math.ceil(movies.length / max_movies_per_page)\n      });\n    });\n  }, []);\n\n  const handlePageChange = newPageNumber => {\n    setPage(p => {\n      return { ...p,\n        number: newPageNumber\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      onChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movies.slice(page.number * max_movies_per_page, (page.number + 1) * max_movies_per_page).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6 col-lg-4 col-xl-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Listing, \"8F4WcsvAD+Y6fmxxSdvwgFwJREs=\");\n\n_c = Listing;\nexport default Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/Users/aaronkaplan/Development/code/3-phase-3/phase-3-sinatra-react-project-frontend/src/pages/Listing/index.js"],"names":["axios","MovieCard","Pagination","useEffect","useState","Listing","max_movies_per_page","page","setPage","first","last","number","totalPages","movies","setMovies","get","then","response","data","Math","ceil","length","handlePageChange","newPageNumber","p","slice","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAMC,mBAAmB,GAAG,CAA5B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAC/BK,IAAAA,KAAK,EAAG,CADuB;AAE/BC,IAAAA,IAAI,EAAG,CAFwB;AAG/BC,IAAAA,MAAM,EAAE,CAHuB;AAI/BC,IAAAA,UAAU,EAAE;AAJmB,GAAD,CAAhC;AAQA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACe,GAAN,CAAW,8BAAX,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAJ,MAAAA,SAAS,CAACI,IAAD,CAAT;AACAV,MAAAA,OAAO,CAAC;AACNC,QAAAA,KAAK,EAAG,CADF;AAENC,QAAAA,IAAI,EAAGS,IAAI,CAACC,IAAL,CAAUP,MAAM,CAACQ,MAAP,GAAgBf,mBAA1B,IAAgD,CAFjD;AAGNK,QAAAA,MAAM,EAAE,CAHF;AAINC,QAAAA,UAAU,EAAEO,IAAI,CAACC,IAAL,CAAUP,MAAM,CAACQ,MAAP,GAAgBf,mBAA1B;AAJN,OAAD,CAAP;AAMD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMgB,gBAAgB,GAAIC,aAAD,IAAmB;AAC1Cf,IAAAA,OAAO,CAACgB,CAAC,IAAI;AAAE,aAAO,EAAC,GAAGA,CAAJ;AAAOb,QAAAA,MAAM,EAAGY;AAAhB,OAAP;AAAsC,KAA9C,CAAP;AACD,GAFD;;AAMA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEhB,IAAlB;AAAwB,MAAA,QAAQ,EAAEe;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGT,MAAM,CAACY,KAAP,CAAalB,IAAI,CAACI,MAAL,GAAYL,mBAAzB,EAA6C,CAACC,IAAI,CAACI,MAAL,GAAY,CAAb,IAAgBL,mBAA7D,EAAkFoB,GAAlF,CAAsFC,KAAK,iBAC1F;AAAoB,UAAA,SAAS,EAAC,iCAA9B;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD;;GAjDQvB,O;;KAAAA,O;AAmDT,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport MovieCard from \"../../components/MovieCard\";\nimport Pagination from \"../../components/Pagination\";\nimport { useEffect, useState } from \"react\";\n\nfunction Listing() {\n\n  const max_movies_per_page = 4;\n\n  const [page, setPage] = useState({\n    first : 0,\n    last : 0,\n    number: 0,\n    totalPages: 0\n  })\n\n\n  const [movies, setMovies] = useState([])\n\n  useEffect(() => {\n    axios.get(`http://localhost:9292/movies`)\n      .then(response => {\n        const data = response.data;\n        setMovies(data);\n        setPage({\n          first : 0,\n          last : Math.ceil(movies.length / max_movies_per_page) -1,\n          number: 0,\n          totalPages: Math.ceil(movies.length / max_movies_per_page)\n        })\n      })\n  }, [])\n\n  const handlePageChange = (newPageNumber) => {\n    setPage(p => { return {...p, number : newPageNumber}});\n  }\n\n  \n\n  return (\n    <>\n      <Pagination page={page} onChange={handlePageChange} />\n      <div className=\"container\">\n        <div className=\"row\">\n          {movies.slice(page.number*max_movies_per_page,(page.number+1)*max_movies_per_page).map(movie => (\n            <div key={movie.id} className=\"col-sm-6 col-lg-4 col-xl-3 mb-3\">\n              <MovieCard movie={movie} />\n            </div>\n          ))}\n\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Listing;"]},"metadata":{},"sourceType":"module"}