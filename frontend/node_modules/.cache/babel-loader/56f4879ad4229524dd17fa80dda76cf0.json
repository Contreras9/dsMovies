{"ast":null,"code":"var _jsxFileName = \"/Users/yarid/Development/code/Phase-3_Ruby/dsMovies/frontend/src/pages/Listing/index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport MovieCard from \"components/MovieCard\";\nimport Pagination from \"components/Pagination\";\nimport { useEffect, useState } from \"react\";\nimport { BASE_URL } from \"utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Listing() {\n  _s();\n\n  const [pageNumber, setPageNumber] = useState(0);\n  const [page, setPage] = useState({\n    content: [],\n    last: true,\n    totalPages: 0,\n    totalElements: 0,\n    size: 12,\n    number: 0,\n    first: true,\n    numberOfElements: 0,\n    empty: true\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/movies?size=12&page=${pageNumber}&sort=id`).then(response => {\n      const data = response.data;\n      setPage(data); // console.log(data)\n      // setPageNumber(data.number)\n    });\n  }, [pageNumber]); //Forma errada que me retorna 2 vez a requisicao ou seja para previnir esse tipo de comportamento preciso trabalhar com os hooks(use states) do react\n  // axios.get(`${BASE_URL}/movies?size=12&page=0`)\n  //   .then(response => {\n  //     console.log(response.data)\n  //   })\n  //o Pagination eh quem vai chamar essa funcao\n\n  const handlePageChange = newPageNumber => {\n    setPageNumber(newPageNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      page: page,\n      onChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: page.content.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-6 col-lg-4 col-xl-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(MovieCard, {\n            movie: movie\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Listing, \"SpaNmL5JuH9xUpNtZ9Mtkqexg7Y=\");\n\n_c = Listing;\nexport default Listing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listing\");","map":{"version":3,"sources":["/Users/yarid/Development/code/Phase-3_Ruby/dsMovies/frontend/src/pages/Listing/index.tsx"],"names":["axios","MovieCard","Pagination","useEffect","useState","BASE_URL","Listing","pageNumber","setPageNumber","page","setPage","content","last","totalPages","totalElements","size","number","first","numberOfElements","empty","get","then","response","data","handlePageChange","newPageNumber","map","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAC9B;AACEO,IAAAA,OAAO,EAAE,EADX;AAEEC,IAAAA,IAAI,EAAE,IAFR;AAGEC,IAAAA,UAAU,EAAE,CAHd;AAIEC,IAAAA,aAAa,EAAE,CAJjB;AAKEC,IAAAA,IAAI,EAAE,EALR;AAMEC,IAAAA,MAAM,EAAE,CANV;AAOEC,IAAAA,KAAK,EAAE,IAPT;AAQEC,IAAAA,gBAAgB,EAAE,CARpB;AASEC,IAAAA,KAAK,EAAE;AATT,GAD8B,CAAhC;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACdH,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEf,QAAS,wBAAuBE,UAAW,UAAxD,EACGc,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACAb,MAAAA,OAAO,CAACa,IAAD,CAAP,CAFgB,CAGhB;AACA;AACD,KANH;AAOD,GARQ,EAQN,CAAChB,UAAD,CARM,CAAT,CAhBiB,CA0BjB;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMiB,gBAAgB,GAAIC,aAAD,IAA2B;AAClDjB,IAAAA,aAAa,CAACiB,aAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEhB,IAAlB;AAAwB,MAAA,QAAQ,EAAEe;AAAlC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGf,IAAI,CAACE,OAAL,CAAae,GAAb,CAAiBC,KAAK,iBACrB;AAAoB,UAAA,SAAS,EAAC,iCAA9B;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,WAAUA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD;;GApDQtB,O;;KAAAA,O;AAsDT,eAAeA,OAAf","sourcesContent":["import axios from \"axios\";\nimport MovieCard from \"components/MovieCard\";\nimport Pagination from \"components/Pagination\";\nimport { useEffect, useState } from \"react\";\nimport { MoviePage } from \"types/movie\";\nimport { BASE_URL } from \"utils/requests\";\n\nfunction Listing() {\n\n  const [pageNumber, setPageNumber] = useState(0);\n  const [page, setPage] = useState<MoviePage>(\n    {\n      content: [],\n      last: true,\n      totalPages: 0,\n      totalElements: 0,\n      size: 12,\n      number: 0,\n      first: true,\n      numberOfElements: 0,\n      empty: true\n    }\n  )\n  useEffect(() => {\n    axios.get(`${BASE_URL}/movies?size=12&page=${pageNumber}&sort=id`)\n      .then(response => {\n        const data = response.data as MoviePage;\n        setPage(data);\n        // console.log(data)\n        // setPageNumber(data.number)\n      })\n  }, [pageNumber])\n\n  //Forma errada que me retorna 2 vez a requisicao ou seja para previnir esse tipo de comportamento preciso trabalhar com os hooks(use states) do react\n  // axios.get(`${BASE_URL}/movies?size=12&page=0`)\n  //   .then(response => {\n  //     console.log(response.data)\n  //   })\n\n  //o Pagination eh quem vai chamar essa funcao\n  const handlePageChange = (newPageNumber: number) => {\n    setPageNumber(newPageNumber);\n  }\n\n  return (\n    <>\n      <Pagination page={page} onChange={handlePageChange} />\n      <div className=\"container\">\n        <div className=\"row\">\n          {page.content.map(movie => (\n            <div key={movie.id} className=\"col-sm-6 col-lg-4 col-xl-3 mb-3\">\n              <MovieCard movie={movie} />\n            </div>\n          ))}\n\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Listing;"]},"metadata":{},"sourceType":"module"}